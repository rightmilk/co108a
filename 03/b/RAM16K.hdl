// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[11..13], a=L0, b=L1, c=L2, d=L3, e=L4, f=L5, g=L6, h=L7);
    RAM4K(in=in,load=L0,address=address[0..11],out=a);
    RAM4K(in=in,load=L1,address=address[0..11],out=b);
    RAM4K(in=in,load=L2,address=address[0..11],out=c);
    RAM4K(in=in,load=L3,address=address[0..11],out=d);
    RAM4K(in=in,load=L4,address=address[0..11],out=e);
    RAM4K(in=in,load=L5,address=address[0..11],out=f);
    RAM4K(in=in,load=L6,address=address[0..11],out=g);
    RAM4K(in=in,load=L7,address=address[0..11],out=h);
    Mux8Way16(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,sel=address[11..13],out=out);
}